[1/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\piotr\OneDrive\Pulpit\X003\http_server\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.1-2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/piotr/OneDrive/Pulpit/X003/http_server/build/bootloader/bootloader.bin"
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/Src/http.c.obj
In file included from C:/Users/piotr/OneDrive/Pulpit/X003/http_server/main/Inc/http.h:9,
                 from C:/Users/piotr/OneDrive/Pulpit/X003/http_server/main/Src/http.c:1:
C:/Users/piotr/OneDrive/Pulpit/X003/http_server/main/Inc/mcp9808.h:20:1: warning: type qualifiers ignored on function return type [-Wignored-qualifiers]
   20 | const float read_temperature(void);
      | ^~~~~
C:/Users/piotr/OneDrive/Pulpit/X003/http_server/main/Src/http.c:115:16: warning: initialization of 'esp_err_t (*)(httpd_req_t *)' {aka 'int (*)(struct httpd_req *)'} from incompatible pointer type 'void (*)(httpd_req_t *)' {aka 'void (*)(struct httpd_req *)'} [-Wincompatible-pointer-types]
  115 |     .handler = temperature_api_handler,
      |                ^~~~~~~~~~~~~~~~~~~~~~~
C:/Users/piotr/OneDrive/Pulpit/X003/http_server/main/Src/http.c:115:16: note: (near initialization for 'temperature_api_uri.handler')
In file included from C:/Users/piotr/OneDrive/Pulpit/X003/http_server/main/Inc/http.h:9,
                 from C:/Users/piotr/OneDrive/Pulpit/X003/http_server/main/Src/http.c:1:
C:/Users/piotr/OneDrive/Pulpit/X003/http_server/main/Inc/mcp9808.h:10:18: warning: 'i2c_master_init' declared 'static' but never defined [-Wunused-function]
   10 | static esp_err_t i2c_master_init(void);
      |                  ^~~~~~~~~~~~~~~
[3/7] Linking C static library esp-idf\main\libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable http_server.elf
[6/7] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated C:/Users/piotr/OneDrive/Pulpit/X003/http_server/build/http_server.bin
[7/7] cmd.exe /C "cd /D C:\Users\piotr\OneDrive\Pulpit\X003\http_server\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.1-2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/piotr/OneDrive/Pulpit/X003/http_server/build/partition_table/partition-table.bin C:/Users/piotr/OneDrive/Pulpit/X003/http_server/build/http_server.bin"
http_server.bin binary size 0xc0070 bytes. Smallest app partition is 0x100000 bytes. 0x3ff90 bytes (25%) free.
